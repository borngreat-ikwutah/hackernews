{
  "openapi": "3.0.3",
  "info": {
    "title": "Hacker News Clone API",
    "description": "A Hacker News clone API built with Better-Auth, Hono, and Drizzle ORM",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "better-auth.session_token",
        "description": "Session cookie set by Better-Auth"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "username": {
            "type": "string",
            "description": "Username"
          }
        },
        "required": ["id", "email", "name"]
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Post ID"
          },
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "Post title"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Post URL (optional)"
          },
          "content": {
            "type": "string",
            "minLength": 10,
            "description": "Post content (optional)"
          },
          "points": {
            "type": "integer",
            "default": 0,
            "description": "Post points/upvotes"
          },
          "commentCount": {
            "type": "integer",
            "default": 0,
            "description": "Number of comments"
          },
          "userId": {
            "type": "string",
            "description": "Author user ID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        },
        "required": ["id", "title", "userId", "createdAt"]
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 31,
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255,
            "description": "User password"
          }
        },
        "required": ["name", "email", "password"]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255,
            "description": "User password"
          }
        },
        "required": ["email", "password"]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "Post title"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Post URL (optional)"
          },
          "content": {
            "type": "string",
            "minLength": 10,
            "description": "Post content (optional)"
          }
        },
        "required": ["title"],
        "anyOf": [
          {
            "required": ["url"]
          },
          {
            "required": ["content"]
          }
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "data": {
            "type": "object",
            "description": "Response data (optional)"
          }
        },
        "required": ["success", "message"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "isFormError": {
            "type": "boolean",
            "description": "Whether this is a form validation error"
          }
        },
        "required": ["success", "message"]
      }
    }
  },
  "paths": {
    "/api/auth/sign-up": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign up a new user",
        "description": "Create a new user account with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "User created"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - email or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Email or username already exists",
                  "isFormError": true
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign in user",
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "headers": {
              "Set-Cookie": {
                "description": "Session cookie",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Logged in"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Invalid email or password",
                  "isFormError": true
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-out": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign out user",
        "description": "Sign out the authenticated user",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Logged out"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - no active session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Get the authenticated user's information",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/create-post": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create a new post",
        "description": "Create a new post (requires authentication)",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "postId": {
                              "type": "integer",
                              "description": "Created post ID"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "message": "Post Created",
                  "data": {
                    "postId": 123
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints powered by Better-Auth"
    },
    {
      "name": "Posts",
      "description": "Post management endpoints"
    }
  ]
}
